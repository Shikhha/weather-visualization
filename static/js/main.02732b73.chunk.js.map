{"version":3,"sources":["components/search/SearchBar.js","actions/index.js","components/chart/Chart.js","components/maps/GoogleMap.js","container/Weather_list.js","App.js","reducers/reducer.js","index.js"],"names":["SearchBar","state","term","handleChange","e","_this","setState","target","value","handleSubmit","preventDefault","props","fetchWeather","react_default","a","createElement","className","onSubmit","this","placeholder","onChange","type","React","Component","connect","city","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","url","response","wrap","_context","prev","next","concat","axios","get","sent","payload","stop","_x","_x2","apply","arguments","Chart","data","color","units","build","height","width","add","forEach","element","average","length","Math","floor","calAverage","GoogleMap","style","lib_default","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","zoom","Weather_list","tempData","cityList","map","item","main","temp","PressureData","pressure","HumidityData","humidity","renderWeather","cityData","temps","list","lon","coord","lat","lng","name","GoogleMap_GoogleMap","weather","console","log","App","search_SearchBar","container_Weather_list","combineReducers","undefined","action","toConsumableArray","store","createStore","rootreducer","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.02732b73.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchWeather } from \"../../actions/index\";\r\n\r\nclass SearchBar extends React.Component {\r\n  state = {\r\n    term: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ term: e.target.value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.fetchWeather(this.state.term);\r\n    this.setState({ term: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container my-3\">\r\n        <div className=\"border p-2\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"form-row\">\r\n              <div className=\"col-9 col-md-10\">\r\n                <input\r\n                  placeholder=\"Get a five day forecast in your favourite cities.....\"\r\n                  value={this.state.term}\r\n                  onChange={this.handleChange}\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <button type=\"submit\" className=\"btn btn-info\">\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { fetchWeather }\r\n)(SearchBar);\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"4e5fd62cd37aef2d0ba28b61c6c0b8ec\";\r\nconst ROOT_URL = \"http://api.openweathermap.org/data/2.5/forecast?\";\r\nconst last = \"APPID=\" + API_KEY;\r\n\r\nexport const FETCH_WEATHER = \"FETCH_WEATHER\";\r\n\r\nexport const fetchWeather = city => {\r\n  return async function(dispatch, getState) {\r\n    const url = `${ROOT_URL}q=${city},us&${last}`;\r\n    const response = await axios.get(url);\r\n    dispatch({ type: \"FETCH_POSTS\", payload: response });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Sparklines,\r\n  SparklinesLine,\r\n  SparklinesReferenceLine\r\n} from \"react-sparklines\";\r\n\r\nfunction calAverage(data) {\r\n  let add = 0;\r\n  data.forEach(element => {\r\n    add += element;\r\n  });\r\n\r\n  const average = add / data.length;\r\n  return Math.floor(average);\r\n}\r\nexport default ({ data, color, units }) => {\r\n  return (\r\n    <div>\r\n      <Sparklines height={120} width={180} data={data}>\r\n        <SparklinesLine color={color} />\r\n        <SparklinesReferenceLine type=\"avg\" />\r\n      </Sparklines>\r\n      <div>\r\n        {calAverage(data)} {units}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nexport default class GoogleMap extends Component {\r\n  render() {\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: \"200px\", width: \"250px\" }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyAq06l5RUVfib62IYRQacLc-KAy0XIWAVs\" }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MakeChart from \"../components/chart/Chart\";\r\nimport Map from \"../components/maps/GoogleMap\";\r\n\r\nclass Weather_list extends Component {\r\n  tempData = cityList => {\r\n    return cityList.map(item => {\r\n      return item.main.temp;\r\n    });\r\n  };\r\n  PressureData = cityList => {\r\n    return cityList.map(item => {\r\n      return item.main.pressure;\r\n    });\r\n  };\r\n  HumidityData = cityList => {\r\n    return cityList.map(item => {\r\n      return item.main.humidity;\r\n    });\r\n  };\r\n  renderWeather = cityData => {\r\n    const temps = this.tempData(cityData.list);\r\n    const pressure = this.PressureData(cityData.list);\r\n    const humidity = this.HumidityData(cityData.list);\r\n    const lon = cityData.city.coord.lon;\r\n    const lat = cityData.city.coord.lat;\r\n    const center = {\r\n      lat: lat,\r\n      lng: lon\r\n    };\r\n    return (\r\n      <tr key={cityData.city.name}>\r\n        <td>\r\n          <Map zoom={12} center={center} />\r\n        </td>\r\n        <td>\r\n          <MakeChart data={temps} color=\"orange\" units=\"K\" />\r\n        </td>\r\n        <td>\r\n          <MakeChart data={pressure} color=\"green\" units=\"hPa\" />\r\n        </td>\r\n        <td>\r\n          <MakeChart data={humidity} color=\"black\" units=\"%\" />\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"custom-container\">\r\n        <table className=\"table table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>City</th>\r\n              <th>Temperature (K)</th>\r\n              <th>Pressure (hPa)</th>\r\n              <th>Humidity (%)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.props.weather.map(this.renderWeather)}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state.weather);\r\n  return { weather: state.weather };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Weather_list);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"./components/search/SearchBar\";\nimport SearchBar from \"./components/search/SearchBar\";\nimport WeatherList from \"./container/Weather_list\";\n\nfunction App() {\n  return (\n    <div>\n      <SearchBar />\n      <WeatherList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\n\r\nconst fetchReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_POSTS\":\r\n      return [action.payload.data, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  weather: fetchReducer\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport rootreducer from \"./reducers/reducer\";\n\nconst store = createStore(rootreducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}